#!/bin/bash

function usage() {
	echo "Usage: electron-dev [COMMAND]"
	echo ""
	echo "Command:"
	echo "  -h, --help"
	echo "    Show this help message."
	echo "  -c, --create-display"
	echo "    Create a VNC Virtual Display."
	echo "  -q, --quit-display"
	echo "    Quit the VNC Virtual Display."
	echo "  -s, --start-app"
	echo "    Start the electron app."
}

function create-display() {
	if pgrep -a x11vnc > /dev/null; then
		echo "VNC Virtual Display already exists."
		exit 0
	fi

	x11vnc -create \
        -env FD_PROG=/usr/bin/fluxbox \
        -env X11VNC_FINDDISPLAY_ALWAYS_FAILS=1 \
        -env X11VNC_CREATE_GEOM=${1:-1024x768x16} \
        -gone "killall Xvfb" \
        -bg -nopw -noipv6 -localhost -forever >/dev/null 2>&1 &

	# nohup su -s /bin/bash node -c 'x11vnc -create \
    #     -env FD_PROG=/usr/bin/fluxbox \
    #     -env X11VNC_FINDDISPLAY_ALWAYS_FAILS=1 \
    #     -env X11VNC_CREATE_GEOM=${1:-1024x768x16} \
    #     -gone "killall Xvfb" \
    #     -bg -nopw -noipv6 -localhost -forever' >/dev/null 2>&1 &

	sleep 1

	if pgrep -a x11vnc >/dev/null; then
		echo "VNC Virtual Display created successfully."
		exit 0
	else
		echo "Error: Unable to create VNC Virtual Display."
		exit 1
	fi
}

function quit-display() {
	if pgrep -a x11vnc > /dev/null || pgrep -a Xvfb > /dev/null || pgrep -a fluxbox > /dev/null; then
		pkill -f "x11vnc"
		pkill -f "Xvfb"
		pkill -f "fluxbox"
	else
		echo "No VNC Virtual Display instance to quit."
		exit 0
	fi

	sleep 1

	if pgrep -a x11vnc >/dev/null; then
		echo "Unable to quit VNC Virtual Display."
		exit 1
	fi

	echo "Successfully quit VNC Virtual Display."
	exit 0
}

function start-app() {
	CSPATH=$PWD/node_modules/electron/dist/chrome-sandbox

	if [[ ! -f "$CSPATH" ]]; then
		echo "Error: chrome-sandbox not found at $CSPATH. Process aborted."
		exit 1
	fi

	chown -R node:node "$PWD"
	chown root:root "$CSPATH"
	chmod 4755 "$CSPATH"
	
	if ! pgrep -a x11vnc >/dev/null; then
		echo "Error: VNC Virtual display not found."
		exit 1
	fi

	FINDDISPLAY=$(su -c "x11vnc --finddpy" -s /bin/sh node)

	if ! echo "$FINDDISPLAY" | grep -q "^DISPLAY=:"; then
		echo "Error: VNC Virtual is not connected."
		exit 1
	fi

	value=${FINDDISPLAY#*=}
	value=${value%%,*}

	su -s /bin/bash node -c "export DISPLAY=$value; npm start"
}

if [ "$#" -ne 1 ]; then
	usage
	exit 1
fi

case "$1" in
	"-h" | "--help")
		usage
		exit 0
		;;
	"-c" | "--create-display")
		create-display
		exit 0
		;;
	"-q" | "--quit-display")
		quit-display
		exit 0
		;;
	"-s" | "--start-app")
		start-app
		exit 0
		;;
	*)
		usage
		exit 1
		;;
esac